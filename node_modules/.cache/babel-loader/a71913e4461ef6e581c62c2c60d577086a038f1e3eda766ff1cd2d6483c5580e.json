{"ast":null,"code":"var _jsxFileName = \"/Users/joseignacio/Developer/caixabanktech-hackathon/src/components/BalanceOverTime.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useStore } from \"@nanostores/react\";\nimport { transactionsStore } from \"../stores/transactionStore\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BalanceOverTime() {\n  _s();\n  const transactions = useStore(transactionsStore);\n\n  // Instructions:\n  // - Sort the transactions by date to display the balance over time.\n  // - Calculate the cumulative balance as you iterate through the sorted transactions.\n  // - Each object in the 'data' array should be of the form: { date, Balance }, where 'date' is the transaction date and 'Balance' is the cumulative balance at that date.\n  const data = transactions.slice().sort((a, b) => new Date(a.date) - new Date(b.date)).reduce((acc, transaction) => {\n    const lastBalance = acc.length > 0 ? acc[acc.length - 1].Balance : 0;\n    const newBalance = transaction.type === \"income\" ? lastBalance + transaction.amount : lastBalance - transaction.amount;\n    acc.push({\n      date: new Date(transaction.date).toLocaleDateString(),\n      Balance: newBalance\n    });\n    return acc;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        formatter: value => `${value.toFixed(2)} €`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Balance\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(BalanceOverTime, \"52/uAtyVozySgKSxoUjJRTrfEzA=\", false, function () {\n  return [useStore];\n});\n_c = BalanceOverTime;\nexport default _c2 = /*#__PURE__*/React.memo(BalanceOverTime);\nvar _c, _c2;\n$RefreshReg$(_c, \"BalanceOverTime\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useStore","transactionsStore","LineChart","Line","XAxis","YAxis","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","BalanceOverTime","_s","transactions","data","slice","sort","a","b","Date","date","reduce","acc","transaction","lastBalance","length","Balance","newBalance","type","amount","push","toLocaleDateString","width","height","children","dataKey","fileName","_jsxFileName","lineNumber","columnNumber","formatter","value","toFixed","stroke","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/joseignacio/Developer/caixabanktech-hackathon/src/components/BalanceOverTime.js"],"sourcesContent":["import React from \"react\";\nimport { useStore } from \"@nanostores/react\";\nimport { transactionsStore } from \"../stores/transactionStore\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nfunction BalanceOverTime() {\n  const transactions = useStore(transactionsStore);\n\n  // Instructions:\n  // - Sort the transactions by date to display the balance over time.\n  // - Calculate the cumulative balance as you iterate through the sorted transactions.\n  // - Each object in the 'data' array should be of the form: { date, Balance }, where 'date' is the transaction date and 'Balance' is the cumulative balance at that date.\n  const data = transactions\n    .slice()\n    .sort((a, b) => new Date(a.date) - new Date(b.date))\n    .reduce((acc, transaction) => {\n      const lastBalance = acc.length > 0 ? acc[acc.length - 1].Balance : 0;\n      const newBalance =\n        transaction.type === \"income\"\n          ? lastBalance + transaction.amount\n          : lastBalance - transaction.amount;\n\n      acc.push({\n        date: new Date(transaction.date).toLocaleDateString(),\n        Balance: newBalance,\n      });\n\n      return acc;\n    }, []);\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <LineChart data={data}>\n        <XAxis dataKey=\"date\" />\n        <YAxis />\n        <Tooltip formatter={(value) => `${value.toFixed(2)} €`} />{\" \"}\n        {/* Format balance in tooltip */}\n        <Line type=\"monotone\" dataKey=\"Balance\" stroke=\"#8884d8\" />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default React.memo(BalanceOverTime);"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,mBAAmB,QACd,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,YAAY,GAAGZ,QAAQ,CAACC,iBAAiB,CAAC;;EAEhD;EACA;EACA;EACA;EACA,MAAMY,IAAI,GAAGD,YAAY,CACtBE,KAAK,CAAC,CAAC,CACPC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAAC,CACnDC,MAAM,CAAC,CAACC,GAAG,EAAEC,WAAW,KAAK;IAC5B,MAAMC,WAAW,GAAGF,GAAG,CAACG,MAAM,GAAG,CAAC,GAAGH,GAAG,CAACA,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC,CAACC,OAAO,GAAG,CAAC;IACpE,MAAMC,UAAU,GACdJ,WAAW,CAACK,IAAI,KAAK,QAAQ,GACzBJ,WAAW,GAAGD,WAAW,CAACM,MAAM,GAChCL,WAAW,GAAGD,WAAW,CAACM,MAAM;IAEtCP,GAAG,CAACQ,IAAI,CAAC;MACPV,IAAI,EAAE,IAAID,IAAI,CAACI,WAAW,CAACH,IAAI,CAAC,CAACW,kBAAkB,CAAC,CAAC;MACrDL,OAAO,EAAEC;IACX,CAAC,CAAC;IAEF,OAAOL,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC;EAER,oBACEZ,OAAA,CAACF,mBAAmB;IAACwB,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5CxB,OAAA,CAACP,SAAS;MAACW,IAAI,EAAEA,IAAK;MAAAoB,QAAA,gBACpBxB,OAAA,CAACL,KAAK;QAAC8B,OAAO,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxB7B,OAAA,CAACJ,KAAK;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACT7B,OAAA,CAACH,OAAO;QAACiC,SAAS,EAAGC,KAAK,IAAK,GAAGA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAAC,GAAG,eAE9D7B,OAAA,CAACN,IAAI;QAACwB,IAAI,EAAC,UAAU;QAACO,OAAO,EAAC,SAAS;QAACQ,MAAM,EAAC;MAAS;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE1B;AAAC3B,EAAA,CApCQD,eAAe;EAAA,QACDV,QAAQ;AAAA;AAAA2C,EAAA,GADtBjC,eAAe;AAsCxB,eAAAkC,GAAA,gBAAe7C,KAAK,CAAC8C,IAAI,CAACnC,eAAe,CAAC;AAAC,IAAAiC,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}