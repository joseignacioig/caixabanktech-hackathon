{"ast":null,"code":"import { cleanTasks } from '../task/index.js';\nexport let clean = Symbol('clean');\nexport let cleanStores = (...stores) => {\n  if (process.env.NODE_ENV === 'production') {\n    throw new Error('cleanStores() can be used only during development or tests');\n  }\n  cleanTasks();\n  for (let $store of stores) {\n    if ($store) {\n      if ($store.mocked) delete $store.mocked;\n      if ($store[clean]) $store[clean]();\n    }\n  }\n};","map":{"version":3,"names":["cleanTasks","clean","Symbol","cleanStores","stores","process","env","NODE_ENV","Error","$store","mocked"],"sources":["/Users/joseignacio/Developer/caixabanktech-hackathon/node_modules/nanostores/clean-stores/index.js"],"sourcesContent":["import { cleanTasks } from '../task/index.js'\n\nexport let clean = Symbol('clean')\n\nexport let cleanStores = (...stores) => {\n  if (process.env.NODE_ENV === 'production') {\n    throw new Error(\n      'cleanStores() can be used only during development or tests'\n    )\n  }\n  cleanTasks()\n  for (let $store of stores) {\n    if ($store) {\n      if ($store.mocked) delete $store.mocked\n      if ($store[clean]) $store[clean]()\n    }\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAE7C,OAAO,IAAIC,KAAK,GAAGC,MAAM,CAAC,OAAO,CAAC;AAElC,OAAO,IAAIC,WAAW,GAAGA,CAAC,GAAGC,MAAM,KAAK;EACtC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,MAAM,IAAIC,KAAK,CACb,4DACF,CAAC;EACH;EACAR,UAAU,CAAC,CAAC;EACZ,KAAK,IAAIS,MAAM,IAAIL,MAAM,EAAE;IACzB,IAAIK,MAAM,EAAE;MACV,IAAIA,MAAM,CAACC,MAAM,EAAE,OAAOD,MAAM,CAACC,MAAM;MACvC,IAAID,MAAM,CAACR,KAAK,CAAC,EAAEQ,MAAM,CAACR,KAAK,CAAC,CAAC,CAAC;IACpC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}