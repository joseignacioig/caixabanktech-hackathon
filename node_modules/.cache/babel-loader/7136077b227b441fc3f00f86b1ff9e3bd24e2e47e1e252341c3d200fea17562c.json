{"ast":null,"code":"import { clean } from '../clean-stores/index.js';\nconst START = 0;\nconst STOP = 1;\nconst SET = 2;\nconst NOTIFY = 3;\nconst MOUNT = 5;\nconst UNMOUNT = 6;\nconst REVERT_MUTATION = 10;\nexport let on = (object, listener, eventKey, mutateStore) => {\n  object.events = object.events || {};\n  if (!object.events[eventKey + REVERT_MUTATION]) {\n    object.events[eventKey + REVERT_MUTATION] = mutateStore(eventProps => {\n      // eslint-disable-next-line no-sequences\n      object.events[eventKey].reduceRight((event, l) => (l(event), event), {\n        shared: {},\n        ...eventProps\n      });\n    });\n  }\n  object.events[eventKey] = object.events[eventKey] || [];\n  object.events[eventKey].push(listener);\n  return () => {\n    let currentListeners = object.events[eventKey];\n    let index = currentListeners.indexOf(listener);\n    currentListeners.splice(index, 1);\n    if (!currentListeners.length) {\n      delete object.events[eventKey];\n      object.events[eventKey + REVERT_MUTATION]();\n      delete object.events[eventKey + REVERT_MUTATION];\n    }\n  };\n};\nexport let onStart = ($store, listener) => on($store, listener, START, runListeners => {\n  let originListen = $store.listen;\n  $store.listen = arg => {\n    if (!$store.lc && !$store.starting) {\n      $store.starting = true;\n      runListeners();\n      delete $store.starting;\n    }\n    return originListen(arg);\n  };\n  return () => {\n    $store.listen = originListen;\n  };\n});\nexport let onStop = ($store, listener) => on($store, listener, STOP, runListeners => {\n  let originOff = $store.off;\n  $store.off = () => {\n    runListeners();\n    originOff();\n  };\n  return () => {\n    $store.off = originOff;\n  };\n});\nexport let onSet = ($store, listener) => on($store, listener, SET, runListeners => {\n  let originSet = $store.set;\n  let originSetKey = $store.setKey;\n  if ($store.setKey) {\n    $store.setKey = (changed, changedValue) => {\n      let isAborted;\n      let abort = () => {\n        isAborted = true;\n      };\n      runListeners({\n        abort,\n        changed,\n        newValue: {\n          ...$store.value,\n          [changed]: changedValue\n        }\n      });\n      if (!isAborted) return originSetKey(changed, changedValue);\n    };\n  }\n  $store.set = newValue => {\n    let isAborted;\n    let abort = () => {\n      isAborted = true;\n    };\n    runListeners({\n      abort,\n      newValue\n    });\n    if (!isAborted) return originSet(newValue);\n  };\n  return () => {\n    $store.set = originSet;\n    $store.setKey = originSetKey;\n  };\n});\nexport let onNotify = ($store, listener) => on($store, listener, NOTIFY, runListeners => {\n  let originNotify = $store.notify;\n  $store.notify = (oldValue, changed) => {\n    let isAborted;\n    let abort = () => {\n      isAborted = true;\n    };\n    runListeners({\n      abort,\n      changed,\n      oldValue\n    });\n    if (!isAborted) return originNotify(oldValue, changed);\n  };\n  return () => {\n    $store.notify = originNotify;\n  };\n});\nexport let STORE_UNMOUNT_DELAY = 1000;\nexport let onMount = ($store, initialize) => {\n  let listener = payload => {\n    let destroy = initialize(payload);\n    if (destroy) $store.events[UNMOUNT].push(destroy);\n  };\n  return on($store, listener, MOUNT, runListeners => {\n    let originListen = $store.listen;\n    $store.listen = (...args) => {\n      if (!$store.lc && !$store.active) {\n        $store.active = true;\n        runListeners();\n      }\n      return originListen(...args);\n    };\n    let originOff = $store.off;\n    $store.events[UNMOUNT] = [];\n    $store.off = () => {\n      originOff();\n      setTimeout(() => {\n        if ($store.active && !$store.lc) {\n          $store.active = false;\n          for (let destroy of $store.events[UNMOUNT]) destroy();\n          $store.events[UNMOUNT] = [];\n        }\n      }, STORE_UNMOUNT_DELAY);\n    };\n    if (process.env.NODE_ENV !== 'production') {\n      let originClean = $store[clean];\n      $store[clean] = () => {\n        for (let destroy of $store.events[UNMOUNT]) destroy();\n        $store.events[UNMOUNT] = [];\n        $store.active = false;\n        originClean();\n      };\n    }\n    return () => {\n      $store.listen = originListen;\n      $store.off = originOff;\n    };\n  });\n};","map":{"version":3,"names":["clean","START","STOP","SET","NOTIFY","MOUNT","UNMOUNT","REVERT_MUTATION","on","object","listener","eventKey","mutateStore","events","eventProps","reduceRight","event","l","shared","push","currentListeners","index","indexOf","splice","length","onStart","$store","runListeners","originListen","listen","arg","lc","starting","onStop","originOff","off","onSet","originSet","set","originSetKey","setKey","changed","changedValue","isAborted","abort","newValue","value","onNotify","originNotify","notify","oldValue","STORE_UNMOUNT_DELAY","onMount","initialize","payload","destroy","args","active","setTimeout","process","env","NODE_ENV","originClean"],"sources":["/Users/joseignacio/Developer/caixabanktech-hackathon/node_modules/nanostores/lifecycle/index.js"],"sourcesContent":["import { clean } from '../clean-stores/index.js'\n\nconst START = 0\nconst STOP = 1\nconst SET = 2\nconst NOTIFY = 3\nconst MOUNT = 5\nconst UNMOUNT = 6\nconst REVERT_MUTATION = 10\n\nexport let on = (object, listener, eventKey, mutateStore) => {\n  object.events = object.events || {}\n  if (!object.events[eventKey + REVERT_MUTATION]) {\n    object.events[eventKey + REVERT_MUTATION] = mutateStore(eventProps => {\n      // eslint-disable-next-line no-sequences\n      object.events[eventKey].reduceRight((event, l) => (l(event), event), {\n        shared: {},\n        ...eventProps\n      })\n    })\n  }\n  object.events[eventKey] = object.events[eventKey] || []\n  object.events[eventKey].push(listener)\n  return () => {\n    let currentListeners = object.events[eventKey]\n    let index = currentListeners.indexOf(listener)\n    currentListeners.splice(index, 1)\n    if (!currentListeners.length) {\n      delete object.events[eventKey]\n      object.events[eventKey + REVERT_MUTATION]()\n      delete object.events[eventKey + REVERT_MUTATION]\n    }\n  }\n}\n\nexport let onStart = ($store, listener) =>\n  on($store, listener, START, runListeners => {\n    let originListen = $store.listen\n    $store.listen = arg => {\n      if (!$store.lc && !$store.starting) {\n        $store.starting = true\n        runListeners()\n        delete $store.starting\n      }\n      return originListen(arg)\n    }\n    return () => {\n      $store.listen = originListen\n    }\n  })\n\nexport let onStop = ($store, listener) =>\n  on($store, listener, STOP, runListeners => {\n    let originOff = $store.off\n    $store.off = () => {\n      runListeners()\n      originOff()\n    }\n    return () => {\n      $store.off = originOff\n    }\n  })\n\nexport let onSet = ($store, listener) =>\n  on($store, listener, SET, runListeners => {\n    let originSet = $store.set\n    let originSetKey = $store.setKey\n    if ($store.setKey) {\n      $store.setKey = (changed, changedValue) => {\n        let isAborted\n        let abort = () => {\n          isAborted = true\n        }\n\n        runListeners({\n          abort,\n          changed,\n          newValue: { ...$store.value, [changed]: changedValue }\n        })\n        if (!isAborted) return originSetKey(changed, changedValue)\n      }\n    }\n    $store.set = newValue => {\n      let isAborted\n      let abort = () => {\n        isAborted = true\n      }\n\n      runListeners({ abort, newValue })\n      if (!isAborted) return originSet(newValue)\n    }\n    return () => {\n      $store.set = originSet\n      $store.setKey = originSetKey\n    }\n  })\n\nexport let onNotify = ($store, listener) =>\n  on($store, listener, NOTIFY, runListeners => {\n    let originNotify = $store.notify\n    $store.notify = (oldValue, changed) => {\n      let isAborted\n      let abort = () => {\n        isAborted = true\n      }\n\n      runListeners({ abort, changed, oldValue })\n      if (!isAborted) return originNotify(oldValue, changed)\n    }\n    return () => {\n      $store.notify = originNotify\n    }\n  })\n\nexport let STORE_UNMOUNT_DELAY = 1000\n\nexport let onMount = ($store, initialize) => {\n  let listener = payload => {\n    let destroy = initialize(payload)\n    if (destroy) $store.events[UNMOUNT].push(destroy)\n  }\n  return on($store, listener, MOUNT, runListeners => {\n    let originListen = $store.listen\n    $store.listen = (...args) => {\n      if (!$store.lc && !$store.active) {\n        $store.active = true\n        runListeners()\n      }\n      return originListen(...args)\n    }\n\n    let originOff = $store.off\n    $store.events[UNMOUNT] = []\n    $store.off = () => {\n      originOff()\n      setTimeout(() => {\n        if ($store.active && !$store.lc) {\n          $store.active = false\n          for (let destroy of $store.events[UNMOUNT]) destroy()\n          $store.events[UNMOUNT] = []\n        }\n      }, STORE_UNMOUNT_DELAY)\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      let originClean = $store[clean]\n      $store[clean] = () => {\n        for (let destroy of $store.events[UNMOUNT]) destroy()\n        $store.events[UNMOUNT] = []\n        $store.active = false\n        originClean()\n      }\n    }\n\n    return () => {\n      $store.listen = originListen\n      $store.off = originOff\n    }\n  })\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}