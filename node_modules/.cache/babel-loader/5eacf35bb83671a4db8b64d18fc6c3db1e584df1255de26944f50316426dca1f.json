{"ast":null,"code":"export function getPath(obj, path) {\n  let allKeys = getAllKeysFromPath(path);\n  let res = obj;\n  for (let key of allKeys) {\n    if (res === undefined) {\n      break;\n    }\n    res = res[key];\n  }\n  return res;\n}\nexport function setPath(obj, path, value) {\n  return setByKey(obj != null ? obj : {}, getAllKeysFromPath(path), value);\n}\nexport function setByKey(obj, splittedKeys, value) {\n  let key = splittedKeys[0];\n  let copy = Array.isArray(obj) ? [...obj] : {\n    ...obj\n  };\n  if (splittedKeys.length === 1) {\n    if (value === undefined) {\n      if (Array.isArray(copy)) {\n        copy.splice(key, 1);\n      } else {\n        delete copy[key];\n      }\n    } else {\n      copy[key] = value;\n    }\n    return copy;\n  }\n  ensureKey(copy, key, splittedKeys[1]);\n  copy[key] = setByKey(copy[key], splittedKeys.slice(1), value);\n  return copy;\n}\nconst ARRAY_INDEX = /(.*)\\[(\\d+)\\]/;\nfunction getAllKeysFromPath(path) {\n  return path.split('.').flatMap(key => getKeyAndIndicesFromKey(key));\n}\nfunction getKeyAndIndicesFromKey(key) {\n  if (ARRAY_INDEX.test(key)) {\n    let [, keyPart, index] = key.match(ARRAY_INDEX);\n    return [...getKeyAndIndicesFromKey(keyPart), index];\n  }\n  return [key];\n}\nconst IS_NUMBER = /^\\d+$/;\nfunction ensureKey(obj, key, nextKey) {\n  if (key in obj) {\n    return;\n  }\n  let isNum = IS_NUMBER.test(nextKey);\n  if (isNum) {\n    obj[key] = Array(parseInt(nextKey, 10) + 1);\n  } else {\n    obj[key] = {};\n  }\n}","map":{"version":3,"names":["getPath","obj","path","allKeys","getAllKeysFromPath","res","key","undefined","setPath","value","setByKey","splittedKeys","copy","Array","isArray","length","splice","ensureKey","slice","ARRAY_INDEX","split","flatMap","getKeyAndIndicesFromKey","test","keyPart","index","match","IS_NUMBER","nextKey","isNum","parseInt"],"sources":["/Users/joseignacio/Developer/caixabanktech-hackathon/node_modules/nanostores/deep-map/path.js"],"sourcesContent":["export function getPath(obj, path) {\n  let allKeys = getAllKeysFromPath(path)\n  let res = obj\n  for (let key of allKeys) {\n    if (res === undefined) {\n      break\n    }\n    res = res[key]\n  }\n  return res\n}\n\nexport function setPath(obj, path, value) {\n  return setByKey(obj != null ? obj : {}, getAllKeysFromPath(path), value)\n}\n\nexport function setByKey(obj, splittedKeys, value) {\n  let key = splittedKeys[0]\n  let copy = Array.isArray(obj) ? [...obj] : { ...obj }\n  if (splittedKeys.length === 1) {\n    if (value === undefined) {\n      if (Array.isArray(copy)) {\n        copy.splice(key, 1)\n      } else {\n        delete copy[key]\n      }\n    } else {\n      copy[key] = value\n    }\n    return copy\n  }\n  ensureKey(copy, key, splittedKeys[1])\n  copy[key] = setByKey(copy[key], splittedKeys.slice(1), value)\n  return copy\n}\n\nconst ARRAY_INDEX = /(.*)\\[(\\d+)\\]/\n\nfunction getAllKeysFromPath(path) {\n  return path.split('.').flatMap(key => getKeyAndIndicesFromKey(key))\n}\n\nfunction getKeyAndIndicesFromKey(key) {\n  if (ARRAY_INDEX.test(key)) {\n    let [, keyPart, index] = key.match(ARRAY_INDEX)\n    return [...getKeyAndIndicesFromKey(keyPart), index]\n  }\n  return [key]\n}\n\nconst IS_NUMBER = /^\\d+$/\nfunction ensureKey(obj, key, nextKey) {\n  if (key in obj) {\n    return\n  }\n\n  let isNum = IS_NUMBER.test(nextKey)\n\n  if (isNum) {\n    obj[key] = Array(parseInt(nextKey, 10) + 1)\n  } else {\n    obj[key] = {}\n  }\n}\n"],"mappings":"AAAA,OAAO,SAASA,OAAOA,CAACC,GAAG,EAAEC,IAAI,EAAE;EACjC,IAAIC,OAAO,GAAGC,kBAAkB,CAACF,IAAI,CAAC;EACtC,IAAIG,GAAG,GAAGJ,GAAG;EACb,KAAK,IAAIK,GAAG,IAAIH,OAAO,EAAE;IACvB,IAAIE,GAAG,KAAKE,SAAS,EAAE;MACrB;IACF;IACAF,GAAG,GAAGA,GAAG,CAACC,GAAG,CAAC;EAChB;EACA,OAAOD,GAAG;AACZ;AAEA,OAAO,SAASG,OAAOA,CAACP,GAAG,EAAEC,IAAI,EAAEO,KAAK,EAAE;EACxC,OAAOC,QAAQ,CAACT,GAAG,IAAI,IAAI,GAAGA,GAAG,GAAG,CAAC,CAAC,EAAEG,kBAAkB,CAACF,IAAI,CAAC,EAAEO,KAAK,CAAC;AAC1E;AAEA,OAAO,SAASC,QAAQA,CAACT,GAAG,EAAEU,YAAY,EAAEF,KAAK,EAAE;EACjD,IAAIH,GAAG,GAAGK,YAAY,CAAC,CAAC,CAAC;EACzB,IAAIC,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACb,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG,CAAC,GAAG;IAAE,GAAGA;EAAI,CAAC;EACrD,IAAIU,YAAY,CAACI,MAAM,KAAK,CAAC,EAAE;IAC7B,IAAIN,KAAK,KAAKF,SAAS,EAAE;MACvB,IAAIM,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;QACvBA,IAAI,CAACI,MAAM,CAACV,GAAG,EAAE,CAAC,CAAC;MACrB,CAAC,MAAM;QACL,OAAOM,IAAI,CAACN,GAAG,CAAC;MAClB;IACF,CAAC,MAAM;MACLM,IAAI,CAACN,GAAG,CAAC,GAAGG,KAAK;IACnB;IACA,OAAOG,IAAI;EACb;EACAK,SAAS,CAACL,IAAI,EAAEN,GAAG,EAAEK,YAAY,CAAC,CAAC,CAAC,CAAC;EACrCC,IAAI,CAACN,GAAG,CAAC,GAAGI,QAAQ,CAACE,IAAI,CAACN,GAAG,CAAC,EAAEK,YAAY,CAACO,KAAK,CAAC,CAAC,CAAC,EAAET,KAAK,CAAC;EAC7D,OAAOG,IAAI;AACb;AAEA,MAAMO,WAAW,GAAG,eAAe;AAEnC,SAASf,kBAAkBA,CAACF,IAAI,EAAE;EAChC,OAAOA,IAAI,CAACkB,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAACf,GAAG,IAAIgB,uBAAuB,CAAChB,GAAG,CAAC,CAAC;AACrE;AAEA,SAASgB,uBAAuBA,CAAChB,GAAG,EAAE;EACpC,IAAIa,WAAW,CAACI,IAAI,CAACjB,GAAG,CAAC,EAAE;IACzB,IAAI,GAAGkB,OAAO,EAAEC,KAAK,CAAC,GAAGnB,GAAG,CAACoB,KAAK,CAACP,WAAW,CAAC;IAC/C,OAAO,CAAC,GAAGG,uBAAuB,CAACE,OAAO,CAAC,EAAEC,KAAK,CAAC;EACrD;EACA,OAAO,CAACnB,GAAG,CAAC;AACd;AAEA,MAAMqB,SAAS,GAAG,OAAO;AACzB,SAASV,SAASA,CAAChB,GAAG,EAAEK,GAAG,EAAEsB,OAAO,EAAE;EACpC,IAAItB,GAAG,IAAIL,GAAG,EAAE;IACd;EACF;EAEA,IAAI4B,KAAK,GAAGF,SAAS,CAACJ,IAAI,CAACK,OAAO,CAAC;EAEnC,IAAIC,KAAK,EAAE;IACT5B,GAAG,CAACK,GAAG,CAAC,GAAGO,KAAK,CAACiB,QAAQ,CAACF,OAAO,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;EAC7C,CAAC,MAAM;IACL3B,GAAG,CAACK,GAAG,CAAC,GAAG,CAAC,CAAC;EACf;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}