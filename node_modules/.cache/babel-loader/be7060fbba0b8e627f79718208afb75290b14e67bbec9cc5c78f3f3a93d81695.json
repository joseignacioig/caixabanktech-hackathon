{"ast":null,"code":"var _jsxFileName = \"/Users/joseignacio/Developer/caixabanktech-hackathon/src/components/ExportButton.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { Download as DownloadIcon } from \"@mui/icons-material\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportButton = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(function ExportButton({\n  data,\n  filename,\n  headers,\n  label\n}) {\n  _s();\n  const handleExport = useCallback(() => {\n    // Convert data to CSV format\n    // Instructions:\n    // - Use the convertArrayOfObjectsToCSV function to convert the data array to a CSV string.\n    // - Create a Blob object with CSV content\n    // - Create a temporary link to download the file\n    const csvContent = convertArrayOfObjectsToCSV(data, headers);\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const link = document.createElement(\"a\");\n    const url = URL.createObjectURL(blob);\n    link.href = url;\n    link.setAttribute(\"download\", filename);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }, [data, filename, headers]);\n\n  // Function to convert object array to CSV\n  // Instructions:\n  // - Implement logic to convert an array of objects into a CSV string.\n  // - Ensure the headers are used to extract the correct fields from each object in the data array.\n  const convertArrayOfObjectsToCSV = () => {\n    if (!data || data.length === 0) return \"\";\n    const csvHeaders = headers.join(\",\") + \"\\n\";\n    const csvRows = data.map(row => headers.map(header => JSON.stringify(row[header.toLowerCase()]) || \"\").join(\",\")).join(\"\\n\");\n    return csvHeaders + csvRows;\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }, this),\n    onClick: handleExport,\n    disabled: !data || data.length === 0,\n    children: label || \"Export CSV\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}, \"FLifhRQrT5+EbzHZ/QMAnAAd/oI=\")), \"FLifhRQrT5+EbzHZ/QMAnAAd/oI=\");\n\n// Define types of props for better verification and documentation\n_c2 = ExportButton;\nExportButton.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filename: PropTypes.string,\n  headers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  label: PropTypes.string\n};\n\n// Define default props\nExportButton.defaultProps = {\n  filename: \"data.csv\",\n  label: \"Export CSV\"\n};\nexport default ExportButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"ExportButton$React.memo\");\n$RefreshReg$(_c2, \"ExportButton\");","map":{"version":3,"names":["React","useCallback","Button","Download","DownloadIcon","PropTypes","jsxDEV","_jsxDEV","ExportButton","_s","memo","_c","data","filename","headers","label","handleExport","csvContent","convertArrayOfObjectsToCSV","blob","Blob","type","link","document","createElement","url","URL","createObjectURL","href","setAttribute","body","appendChild","click","removeChild","length","csvHeaders","join","csvRows","map","row","header","JSON","stringify","toLowerCase","variant","color","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","children","_c2","propTypes","arrayOf","object","isRequired","string","defaultProps","$RefreshReg$"],"sources":["/Users/joseignacio/Developer/caixabanktech-hackathon/src/components/ExportButton.js"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { Download as DownloadIcon } from \"@mui/icons-material\";\nimport PropTypes from \"prop-types\";\n\nconst ExportButton = React.memo(function ExportButton({\n  data,\n  filename,\n  headers,\n  label,\n}) {\n  const handleExport = useCallback(() => {\n    // Convert data to CSV format\n    // Instructions:\n    // - Use the convertArrayOfObjectsToCSV function to convert the data array to a CSV string.\n    // - Create a Blob object with CSV content\n    // - Create a temporary link to download the file\n    const csvContent = convertArrayOfObjectsToCSV(data, headers);\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\n\n    const link = document.createElement(\"a\");\n    const url = URL.createObjectURL(blob);\n    link.href = url;\n    link.setAttribute(\"download\", filename);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }, [data, filename, headers]);\n\n  // Function to convert object array to CSV\n  // Instructions:\n  // - Implement logic to convert an array of objects into a CSV string.\n  // - Ensure the headers are used to extract the correct fields from each object in the data array.\n  const convertArrayOfObjectsToCSV = () => {\n    if (!data || data.length === 0) return \"\";\n\n    const csvHeaders = headers.join(\",\") + \"\\n\";\n    const csvRows = data\n      .map((row) =>\n        headers\n          .map((header) => JSON.stringify(row[header.toLowerCase()]) || \"\")\n          .join(\",\")\n      )\n      .join(\"\\n\");\n\n    return csvHeaders + csvRows;\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      startIcon={<DownloadIcon />}\n      onClick={handleExport}\n      disabled={!data || data.length === 0}\n    >\n      {label || \"Export CSV\"}\n    </Button>\n  );\n});\n\n// Define types of props for better verification and documentation\nExportButton.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filename: PropTypes.string,\n  headers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  label: PropTypes.string,\n};\n\n// Define default props\nExportButton.defaultProps = {\n  filename: \"data.csv\",\n  label: \"Export CSV\",\n};\n\nexport default ExportButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}