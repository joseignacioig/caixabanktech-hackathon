{"ast":null,"code":"var _jsxFileName = \"/Users/joseignacio/Developer/caixabanktech-hackathon/src/components/TransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useStore } from \"@nanostores/react\";\nimport { transactionsStore, addTransaction, setTransactions } from \"../stores/transactionStore\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Grid, Box, Typography, Alert } from \"@mui/material\";\nimport { categoryKeywords } from \"../constants/categoryKeywords\";\nimport { allCategories } from \"../constants/categories\";\nimport FormSelectField from \"./FormSelectField\";\nimport FormTextField from \"./FormTextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionForm({\n  transactionToEdit,\n  onClose\n}) {\n  _s();\n  const transactions = useStore(transactionsStore);\n  const [error, setError] = useState(\"\");\n  // Local state variables\n  // Instructions:\n  // - Ensure the form fields are correctly initialized when in \"edit mode.\"\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"expense\");\n  const [category, setCategory] = useState(\"\");\n  const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]);\n\n  // Implement the function to assign a category based on description keywords\n  const assignCategory = desc => {\n    // Instructions:\n    // - Loop through `categoryKeywords` to find matching keywords\n    // - If a keyword is found in the description, return the category\n    // - Return 'Other Expenses' if no category is found\n\n    const lowerDesc = desc.toLowerCase();\n    const category = Object.entries(categoryKeywords).find(([category, keywords]) => keywords.some(keyword => lowerDesc.includes(keyword.toLowerCase())));\n    return category ? category[0] : \"Other Expenses\";\n  };\n\n  // Auto-assign a category if adding a new transaction\n  useEffect(() => {\n    // Instructions:\n    // - Call the `assignCategory` function to determine the category based on the description\n    // - Then, update the category state with the result\n    const category = assignCategory(description);\n    setCategory(category);\n\n    // Instructions: Add the proper dependencies to the useEffect hook\n  }, [description]);\n  useEffect(() => {\n    if (transactionToEdit) {\n      setDescription(transactionToEdit.description);\n      setAmount(transactionToEdit.amount.toString());\n      setType(transactionToEdit.type);\n      setCategory(transactionToEdit.category);\n      setDate(transactionToEdit.date);\n    }\n  }, [transactionToEdit]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Instructions:\n    // - Validate that all fields are filled in.\n    // - If editing, update the transaction in the store.\n    // - If adding a new transaction, create it and save it to the store.\n    // - The transaction type should be either \"income\" or \"expense\".\n    // - Ensure the transaction has the following structure: { id, description, amount, type, category, date }\n\n    if (!description.trim() || !amount || !type || !category || !date) {\n      setError(\"Please fill in all fields.\");\n      return;\n    }\n    if (amount <= 0) {\n      setError(\"Amount should be greater than zero.\");\n      return;\n    }\n    const transaction = {\n      id: transactionToEdit ? transactionToEdit.id : Date.now(),\n      description,\n      amount: parseFloat(amount),\n      type,\n      category,\n      date\n    };\n    if (transactionToEdit) {\n      const updatedTransactions = transactions.map(t => t.id === transaction.id ? transaction : t);\n      setTransactions(updatedTransactions);\n    } else {\n      addTransaction(transaction);\n    }\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: transactionToEdit ? \"Edit Transaction\" : \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormTextField, {\n              label: \"Description\",\n              value: description,\n              onChange: e => setDescription(e.target.value),\n              name: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormTextField, {\n              label: \"Amount (\\u20AC)\",\n              type: \"number\",\n              value: amount,\n              onChange: e => setAmount(e.target.value),\n              name: \"amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormSelectField, {\n              label: \"Type\",\n              value: type,\n              onChange: e => setType(e.target.value),\n              options: [{\n                label: \"Income\",\n                value: \"income\"\n              }, {\n                label: \"Expense\",\n                value: \"expense\"\n              }],\n              name: \"type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormSelectField, {\n              label: \"Category\",\n              value: category,\n              onChange: e => setCategory(e.target.value),\n              options: [...allCategories.map(cat => ({\n                label: cat,\n                value: cat\n              })), {\n                label: \"Other Expenses\",\n                value: \"Other Expenses\"\n              }],\n              name: \"category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormTextField, {\n              label: \"Date\",\n              type: \"date\",\n              value: date,\n              onChange: e => setDate(e.target.value),\n              name: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            px: 3,\n            fixed: true\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            width: \"100%\",\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            color: \"secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            \"data-testid\": \"add-transaction-button\",\n            children: transactionToEdit ? \"Update\" : \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionForm, \"WvkUBiDLXx1PT6DIRQUGNh+xTHw=\", false, function () {\n  return [useStore];\n});\n_c = TransactionForm;\nexport default _c2 = /*#__PURE__*/React.memo(TransactionForm);\nvar _c, _c2;\n$RefreshReg$(_c, \"TransactionForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useStore","transactionsStore","addTransaction","setTransactions","Dialog","DialogTitle","DialogContent","DialogActions","Button","Grid","Box","Typography","Alert","categoryKeywords","allCategories","FormSelectField","FormTextField","jsxDEV","_jsxDEV","TransactionForm","transactionToEdit","onClose","_s","transactions","error","setError","description","setDescription","amount","setAmount","type","setType","category","setCategory","date","setDate","Date","toISOString","split","assignCategory","desc","lowerDesc","toLowerCase","Object","entries","find","keywords","some","keyword","includes","toString","handleSubmit","e","preventDefault","trim","transaction","id","now","parseFloat","updatedTransactions","map","t","open","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","item","xs","label","value","onChange","target","name","sm","options","cat","severity","sx","px","fixed","color","display","justifyContent","width","p","onClick","variant","_c","_c2","memo","$RefreshReg$"],"sources":["/Users/joseignacio/Developer/caixabanktech-hackathon/src/components/TransactionForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useStore } from \"@nanostores/react\";\nimport {\n  transactionsStore,\n  addTransaction,\n  setTransactions,\n} from \"../stores/transactionStore\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Grid,\n  Box,\n  Typography,\n  Alert,\n} from \"@mui/material\";\nimport { categoryKeywords } from \"../constants/categoryKeywords\";\nimport { allCategories } from \"../constants/categories\";\nimport FormSelectField from \"./FormSelectField\";\nimport FormTextField from \"./FormTextField\";\n\nfunction TransactionForm({ transactionToEdit, onClose }) {\n  const transactions = useStore(transactionsStore);\n  const [error, setError] = useState(\"\");\n  // Local state variables\n  // Instructions:\n  // - Ensure the form fields are correctly initialized when in \"edit mode.\"\n  const [description, setDescription] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [type, setType] = useState(\"expense\");\n  const [category, setCategory] = useState(\"\");\n  const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]);\n\n  // Implement the function to assign a category based on description keywords\n  const assignCategory = (desc) => {\n    // Instructions:\n    // - Loop through `categoryKeywords` to find matching keywords\n    // - If a keyword is found in the description, return the category\n    // - Return 'Other Expenses' if no category is found\n\n    const lowerDesc = desc.toLowerCase();\n\n    const category = Object.entries(categoryKeywords).find(\n      ([category, keywords]) =>\n        keywords.some((keyword) => lowerDesc.includes(keyword.toLowerCase()))\n    );\n\n    return category ? category[0] : \"Other Expenses\";\n  };\n\n  // Auto-assign a category if adding a new transaction\n  useEffect(() => {\n      // Instructions:\n      // - Call the `assignCategory` function to determine the category based on the description\n      // - Then, update the category state with the result\n      const category = assignCategory(description);\n      setCategory(category);\n\n    // Instructions: Add the proper dependencies to the useEffect hook\n  }, [description]);\n\n  useEffect(() => {\n    if (transactionToEdit) {\n      setDescription(transactionToEdit.description);\n      setAmount(transactionToEdit.amount.toString());\n      setType(transactionToEdit.type);\n      setCategory(transactionToEdit.category);\n      setDate(transactionToEdit.date);\n    }\n  }, [transactionToEdit]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Instructions:\n    // - Validate that all fields are filled in.\n    // - If editing, update the transaction in the store.\n    // - If adding a new transaction, create it and save it to the store.\n    // - The transaction type should be either \"income\" or \"expense\".\n    // - Ensure the transaction has the following structure: { id, description, amount, type, category, date }\n\n    if (!description.trim() || !amount || !type || !category || !date) {\n      setError(\"Please fill in all fields.\");\n      return;\n    }\n\n    if (amount <= 0) {\n      setError(\"Amount should be greater than zero.\");\n      return;\n    }\n\n    const transaction = {\n      id: transactionToEdit ? transactionToEdit.id : Date.now(),\n      description,\n      amount: parseFloat(amount),\n      type,\n      category,\n      date,\n    };\n\n    if (transactionToEdit) {\n      const updatedTransactions = transactions.map((t) =>\n        t.id === transaction.id ? transaction : t\n      );\n      setTransactions(updatedTransactions);\n    } else {\n      addTransaction(transaction);\n    }\n\n    onClose();\n  };\n\n  return (\n    <Dialog open={true} onClose={onClose}>\n      <DialogTitle>\n        {transactionToEdit ? \"Edit Transaction\" : \"Add Transaction\"}\n      </DialogTitle>\n      <form onSubmit={handleSubmit}>\n        <DialogContent>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <FormTextField\n                label=\"Description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                name=\"description\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormTextField\n                label=\"Amount (€)\"\n                type=\"number\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n                name=\"amount\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormSelectField\n                label=\"Type\"\n                value={type}\n                onChange={(e) => setType(e.target.value)}\n                options={[\n                  { label: \"Income\", value: \"income\" },\n                  { label: \"Expense\", value: \"expense\" },\n                ]}\n                name=\"type\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormSelectField\n                label=\"Category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n                options={[\n                  ...allCategories.map((cat) => ({\n                    label: cat,\n                    value: cat,\n                  })),\n                  { label: \"Other Expenses\", value: \"Other Expenses\" },\n                ]}\n                name=\"category\"\n              />\n            </Grid>\n            {/* Fill in the remaining field for date type */}\n            <Grid item xs={12} sm={6}>\n              <FormTextField\n                label=\"Date\"\n                type=\"date\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n                name=\"date\"\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogContent>\n          {error && (\n            <Alert severity=\"error\" sx={{ px: 3, fixed: true }}>\n              <Typography color=\"error\">{error}</Typography>\n            </Alert>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              width: \"100%\",\n              p: 2,\n            }}\n          >\n            <Button onClick={onClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              data-testid=\"add-transaction-button\"\n            >\n              {transactionToEdit ? \"Update\" : \"Add\"}\n            </Button>\n          </Box>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n}\n\nexport default React.memo(TransactionForm);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}